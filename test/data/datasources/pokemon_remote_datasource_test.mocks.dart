// Mocks generated by Mockito 5.0.17 from annotations
// in pokedex/test/data/datasources/pokemon_remote_datasource_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pokedex/data/network/pokemon_rest_client.dart' as _i2;
import 'package:pokedex/domain/entities/pokemon.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetPokemonsResponse_0 extends _i1.Fake
    implements _i2.GetPokemonsResponse {}

class _FakePokemon_1 extends _i1.Fake implements _i3.Pokemon {}

/// A class which mocks [PokemonRestClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonRestClient extends _i1.Mock implements _i2.PokemonRestClient {
  MockPokemonRestClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.GetPokemonsResponse> getPokemons(
          {int? offset = 0, int? limit = 15}) =>
      (super.noSuchMethod(
          Invocation.method(#getPokemons, [], {#offset: offset, #limit: limit}),
          returnValue: Future<_i2.GetPokemonsResponse>.value(
              _FakeGetPokemonsResponse_0())) as _i4
          .Future<_i2.GetPokemonsResponse>);
  @override
  _i4.Future<_i3.Pokemon> getPokemon(dynamic nameOrId) =>
      (super.noSuchMethod(Invocation.method(#getPokemon, [nameOrId]),
              returnValue: Future<_i3.Pokemon>.value(_FakePokemon_1()))
          as _i4.Future<_i3.Pokemon>);
}
